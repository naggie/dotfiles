{"ts":1342907422135,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# System-wide .bashrc file for interactive bash(1) shells.\n\n# To enable the settings / commands in this file for login shells as well,\n# this file has to be sourced in /etc/profile.\n\n# If not running interactively, don't do anything\n[ -z \"$PS1\" ] && return\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"$debian_chroot\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# MOAR PROMPT\nprintf \"\\033]0;Aperture Laboratories Inc.\\007\" \"$@\"\nPS1='\\[\\e[0;32m\\][\\u@\\h\\[\\e[m\\] \\[\\e[1;34m\\]\\w\\[\\e[m\\]\\[\\e[0;32m\\]]\\[\\e[m\\] \\[\\e[1;32m\\]\\$\\[\\e[m\\] \\[\\e[1;37m\\]'\n\n# Commented out, don't overwrite xterm -T \"title\" -n \"icontitle\" by default.\n# If this is an xterm set the title to user@host:dir\n#case \"$TERM\" in\n#xterm*|rxvt*)\n#    PROMPT_COMMAND='echo -ne \"\\033]0;${USER}@${HOSTNAME}: ${PWD}\\007\"'\n#    ;;\n#*)\n#    ;;\n#esac\n\n# enable bash completion in interactive shells\nif [ -f /etc/bash_completion ] && ! shopt -oq posix; then\n    . /etc/bash_completion\nfi\n\n# sudo hint\nif [ ! -e \"$HOME/.sudo_as_admin_successful\" ] && [ ! -e \"$HOME/.hushlogin\" ] ; then\n    case \" $(groups) \" in *\\ admin\\ *)\n    if [ -x /usr/bin/sudo ]; then\n\tcat <<-EOF\n\tTo run a command as administrator (user \"root\"), use \"sudo <command>\".\n\tSee \"man sudo_root\" for details.\n\t\n\tEOF\n    fi\n    esac\nfi\n\n# if the command-not-found package is installed, use it\nif [ -x /usr/lib/command-not-found -o -x /usr/share/command-not-found ]; then\n\tfunction command_not_found_handle {\n\t        # check because c-n-f could've been removed in the meantime\n                if [ -x /usr/lib/command-not-found ]; then\n\t\t   /usr/bin/python /usr/lib/command-not-found -- \"$1\"\n                   return $?\n                elif [ -x /usr/share/command-not-found ]; then\n\t\t   /usr/bin/python /usr/share/command-not-found -- \"$1\"\n                   return $?\n\t\telse\n\t\t   return 127\n\t\tfi\n\t}\nfi\n\nalias more='less'\nalias ls='ls --color=auto'\nalias ll='ls -al'\nalias cd..='cd ..'\nalias ..='cd ..'\nalias sl='ls'\nalias l='ls'\nalias s='ls'\n\n\n# lol\nalias coffee='yes \"coffee\"'\n\n# Piping 'yes' in is bad, no accidentally removing packages due to typos\n# It is not difficult to press 'y' yourself\n# \n# Please don't change my things without telling me.\n# It is not possible to accidently remove things. Notice 'install' \nalias sagi='yes | sudo apt-get install'\n\n\n# Tar can now do this by itself with -xf\nextract () {\n   if [ -f $1 ] ; then\n       case $1 in\n           *.tar.bz2)   tar xvjf $1    ;;\n           *.tar.gz)    tar xvzf $1    ;;\n           *.bz2)       bunzip2 $1     ;;\n           *.rar)       unrar x $1       ;;\n           *.gz)        gunzip $1      ;;\n           *.tar)       tar xvf $1     ;;\n           *.tbz2)      tar xvjf $1    ;;\n           *.tgz)       tar xvzf $1    ;;\n           *.zip)       unzip $1       ;;\n           *.Z)         uncompress $1  ;;\n           *.7z)        7z x $1        ;;\n           *)           echo \"don't know how to extract '$1'...\" ;;\n       esac\n   else\n       echo \"'$1' is not a valid file!\"\n   fi\n}\n\nfunction cd()\n{\n\tbuiltin cd \"$*\" && ls\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":3227}]],"length":3227}
{"contributors":[],"silentsave":true,"ts":1343032513730,"patch":[[{"diffs":[[0,"ls.\n"],[-1,"\t"],[0,"\n"],[1,""],[0,"\tEOF"]],"start1":1432,"start2":1432,"length1":10,"length2":9},{"diffs":[[0,"='less'\n"],[1,"#"],[0,"alias ls"]],"start1":2041,"start2":2041,"length1":16,"length2":17},{"diffs":[[0,"r=auto'\n"],[-1,""],[0,"alias ll"]],"start1":2069,"start2":2069,"length1":16,"length2":16},{"diffs":[[0,"'\n\n\n"],[-1,"# lol\nalias coffee='yes \"coffee\"'\n\n# Piping 'yes' in is bad, no accidentally removing packages due to typos\n# It is not difficult to press 'y' yourself\n# \n# Please don't change my things without telling me.\n# It is not possible to accidently remove things. Notice 'install' \n"],[0,"alia"]],"start1":2169,"start2":2169,"length1":283,"length2":8},{"diffs":[[0,"\n{\n\t"],[-1,"builtin cd \"$*\" && ls\n}"],[1,"if [ -z $* ]; then\n\t\tbuiltin cd ~ && ls\n\telse\n\t\tbuiltin cd \"$*\" && ls\n\tfi\n}\n\nexport EDITOR=vim\nexport PATH=$PATH:~/bin/\n\n"],[0,"\n"]],"start1":2924,"start2":2924,"length1":28,"length2":126}]],"length":3050,"saved":false}
{"contributors":[],"silentsave":true,"ts":1343037268811,"patch":[[{"diffs":[[0,"\n\n# "],[-1,"MOAR PROMPT\n"],[1,"Useful title.\nprintf \"\\033]0;$HOSTNAME\\007\" \"$@\"\n#"],[0,"prin"]],"start1":570,"start2":570,"length1":20,"length2":58},{"diffs":[[0,"07\" \"$@\""],[1,"\n\n# MOAR PROMPT"],[0,"\nPS1='\\["]],"start1":667,"start2":667,"length1":16,"length2":31},{"diffs":[[0,"s='ls'\n\n"],[1,"alias gpu='git push'\nalias gpl='git pull'\nalias gs='git status'\nalias ga='git commit -a'\n\n"],[0,"\nalias s"]],"start1":2217,"start2":2217,"length1":16,"length2":106},{"diffs":[[0,"~/bin/\n\n"],[1,"# fix backspace on some terminals\n#stty erase ^?\nstty erase ^H\n\nTERM=xterm-256color"],[0,"\n"]],"start1":3184,"start2":3184,"length1":9,"length2":92}]],"length":3276,"saved":false}
{"ts":1343037269695,"patch":[[{"diffs":[[0,"56color\n"],[1,"\n"]],"start1":3268,"start2":3268,"length1":8,"length2":9}]],"length":3277,"saved":false}
{"ts":1343037281759,"patch":[[{"diffs":[[0,"6color\n\n"],[1,"i# "]],"start1":3269,"start2":3269,"length1":8,"length2":11}]],"length":3280,"saved":false}
{"ts":1343037283734,"patch":[[{"diffs":[[0,"lor\n\ni# "],[1,"auto tmux\n"]],"start1":3272,"start2":3272,"length1":8,"length2":18}]],"length":3290,"saved":false}
{"ts":1343037285865,"patch":[[{"diffs":[[0,"to tmux\n"],[1,"#"]],"start1":3282,"start2":3282,"length1":8,"length2":9}]],"length":3291,"saved":false}
{"ts":1343037287277,"patch":[[{"diffs":[[0,"o tmux\n#"],[1,"test -z $TMUX && (tmux a || tmux)"]],"start1":3283,"start2":3283,"length1":8,"length2":41}]],"length":3324,"saved":false}
{"ts":1343037288628,"patch":[[{"diffs":[[0,"6color\n\n"],[-1,"i"],[0,"# auto t"]],"start1":3269,"start2":3269,"length1":17,"length2":16}]],"length":3323,"saved":false}
{"contributors":[],"silentsave":true,"ts":1343055956434,"patch":[[{"diffs":[[0,"|| tmux)"],[1,"\n\n\n"]],"start1":3315,"start2":3315,"length1":8,"length2":11}]],"length":3326,"saved":false}
{"ts":1343055958813,"patch":[[{"diffs":[[0,"| tmux)\n"],[-1,"\n\n"]],"start1":3316,"start2":3316,"length1":10,"length2":8}]],"length":3324,"saved":false}
{"ts":1343055959951,"patch":[[{"diffs":[[0,"|| tmux)"],[-1,"\n"]],"start1":3315,"start2":3315,"length1":9,"length2":8}]],"length":3323,"saved":false}
{"ts":1343055961877,"patch":[[{"diffs":[[0,"6color\n\n"],[1,"\n\n"],[0,"# auto t"]],"start1":3269,"start2":3269,"length1":16,"length2":18},{"diffs":[[0,"uto tmux"],[1,"i?"],[0,"\n#test -"]],"start1":3282,"start2":3282,"length1":16,"length2":18}]],"length":3327,"saved":false}
{"ts":1343055965629,"patch":[[{"diffs":[[0,"uto tmux"],[-1,"i"],[0,"?\n#test "]],"start1":3282,"start2":3282,"length1":17,"length2":16}]],"length":3326,"saved":false}
{"ts":1343055971177,"patch":[[{"diffs":[[0,"6color\n\n"],[1,"keychain --quiet  .ssh/did_rsa 2>/dev/null\n"],[0,"\n\n# auto"]],"start1":3269,"start2":3269,"length1":16,"length2":59}]],"length":3369,"saved":false}
{"ts":1343055973619,"patch":[[{"diffs":[[0,"v/null\n\n"],[-1,"\n"],[0,"# auto t"]],"start1":3313,"start2":3313,"length1":17,"length2":16}]],"length":3368,"saved":false}
{"contributors":[],"silentsave":true,"ts":1343061106949,"patch":[[{"diffs":[[0,"rminals\n"],[-1,"#"],[0,"stty era"]],"start1":3218,"start2":3218,"length1":17,"length2":16}]],"length":3367,"saved":false}
{"ts":1343061109747,"patch":[[{"diffs":[[0,"rase ^?\n"],[1,"#"],[0,"stty era"]],"start1":3232,"start2":3232,"length1":16,"length2":17}]],"length":3368,"saved":false}
{"ts":1343061224084,"patch":[[{"diffs":[[0,"o tmux?\n"],[-1,"#"],[0,"test -z "]],"start1":3326,"start2":3326,"length1":17,"length2":16}]],"length":3367,"saved":false}
{"ts":1343061234527,"patch":[[{"diffs":[[0,"|| tmux)"],[1," 2"]],"start1":3359,"start2":3359,"length1":8,"length2":10}]],"length":3369,"saved":false}
{"ts":1343061237839,"patch":[[{"diffs":[[0," tmux) 2"],[1,">/dev/null"]],"start1":3361,"start2":3361,"length1":8,"length2":18}]],"length":3379,"saved":false}
{"contributors":[],"silentsave":true,"ts":1343139890421,"patch":[[{"diffs":[[0,"='less'\n"],[-1,"#"],[0,"alias ls"]],"start1":2094,"start2":2094,"length1":17,"length2":16},{"diffs":[[0,"r=auto'\n"],[1,"alias grep='grep --color=auto'\n"],[0,"alias ll"]],"start1":2121,"start2":2121,"length1":16,"length2":47},{"diffs":[[0,"tmux"],[-1,"?\ntest -z $TMUX && (tmux a || tmux)"],[1," if installed?\nwhich tmux >/dev/null && test -z $TMUX && (tmux a || tmux)\n\n# git stuff\ngit config --global color.ui true"],[0," 2>"],[1," "],[0,"/dev"]],"start1":3358,"start2":3358,"length1":46,"length2":132},{"diffs":[[0,"rue 2> /dev/null"],[1,"\n"]],"start1":3479,"start2":3479,"length1":16,"length2":17}]],"length":3496,"saved":false}
